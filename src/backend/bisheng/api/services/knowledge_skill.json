{
  "edges": [
    {
      "id": "reactflow__edge-Milvus-9KIR6Milvus|Milvus-9KIR6|VectorStore|Milvus|BaseRetriever|VectorStoreRetriever-MixEsVectorRetriever-JIgmCBaseRetriever|vector_retriever|MixEsVectorRetriever-JIgmC",
      "style": {
        "stroke": "#555"
      },
      "source": "Milvus-9KIR6",
      "target": "MixEsVectorRetriever-JIgmC",
      "animated": false,
      "selected": false,
      "className": "",
      "sourceHandle": "Milvus|Milvus-9KIR6|Milvus|VectorStore|BaseRetriever|VectorStoreRetriever",
      "targetHandle": "BaseRetriever|vector_retriever|MixEsVectorRetriever-JIgmC"
    },
    {
      "id": "reactflow__edge-ElasticKeywordsSearch-pFFyRElasticKeywordsSearch|ElasticKeywordsSearch-pFFyR|VectorStore|ElasticKeywordsSearch|BaseRetriever|VectorStoreRetriever-MixEsVectorRetriever-JIgmCBaseRetriever|keyword_retriever|MixEsVectorRetriever-JIgmC",
      "style": {
        "stroke": "#555"
      },
      "source": "ElasticKeywordsSearch-pFFyR",
      "target": "MixEsVectorRetriever-JIgmC",
      "animated": false,
      "selected": false,
      "className": "",
      "sourceHandle": "ElasticKeywordsSearch|ElasticKeywordsSearch-pFFyR|ElasticKeywordsSearch|VectorStore|BaseRetriever|VectorStoreRetriever",
      "targetHandle": "BaseRetriever|keyword_retriever|MixEsVectorRetriever-JIgmC"
    },
    {
      "id": "reactflow__edge-ConversationBufferMemory-Fzq3ZConversationBufferMemory|ConversationBufferMemory-Fzq3Z|ConversationBufferMemory|BaseChatMemory|BaseMemory-ConversationalRetrievalChain-8rtnDBaseChatMemory|memory|ConversationalRetrievalChain-8rtnD",
      "style": {
        "stroke": "#555"
      },
      "source": "ConversationBufferMemory-Fzq3Z",
      "target": "ConversationalRetrievalChain-8rtnD",
      "animated": true,
      "className": "",
      "sourceHandle": "ConversationBufferMemory|ConversationBufferMemory-Fzq3Z|BaseMemory|BaseChatMemory|ConversationBufferMemory",
      "targetHandle": "BaseChatMemory|memory|ConversationalRetrievalChain-8rtnD"
    },
    {
      "id": "reactflow__edge-ChatOpenAI-AjHb7ChatOpenAI|ChatOpenAI-AjHb7|BaseLanguageModel|ChatOpenAI|BaseChatModel|BaseLLM-ConversationalRetrievalChain-8rtnDBaseLanguageModel|llm|ConversationalRetrievalChain-8rtnD",
      "style": {
        "stroke": "#555"
      },
      "source": "ChatOpenAI-AjHb7",
      "target": "ConversationalRetrievalChain-8rtnD",
      "animated": true,
      "className": "",
      "sourceHandle": "ChatOpenAI|ChatOpenAI-AjHb7|ChatOpenAI|BaseChatModel|BaseLanguageModel|BaseLLM",
      "targetHandle": "BaseLanguageModel|llm|ConversationalRetrievalChain-8rtnD"
    },
    {
      "id": "reactflow__edge-PromptTemplate-kmKoPPromptTemplate|PromptTemplate-kmKoP|BasePromptTemplate|PromptTemplate|StringPromptTemplate-ConversationalRetrievalChain-8rtnDBasePromptTemplate|combine_docs_chain_kwargs|ConversationalRetrievalChain-8rtnD",
      "style": {
        "stroke": "#555"
      },
      "source": "PromptTemplate-kmKoP",
      "target": "ConversationalRetrievalChain-8rtnD",
      "animated": true,
      "className": "",
      "sourceHandle": "PromptTemplate|PromptTemplate-kmKoP|StringPromptTemplate|PromptTemplate|BasePromptTemplate",
      "targetHandle": "BasePromptTemplate|combine_docs_chain_kwargs|ConversationalRetrievalChain-8rtnD"
    },
    {
      "id": "reactflow__edge-MixEsVectorRetriever-JIgmCMixEsVectorRetriever|MixEsVectorRetriever-JIgmC|BaseRetriever|MixEsVectorRetriever-ConversationalRetrievalChain-8rtnDBaseRetriever|retriever|ConversationalRetrievalChain-8rtnD",
      "style": {
        "stroke": "#555"
      },
      "source": "MixEsVectorRetriever-JIgmC",
      "target": "ConversationalRetrievalChain-8rtnD",
      "animated": true,
      "className": "",
      "sourceHandle": "MixEsVectorRetriever|MixEsVectorRetriever-JIgmC|MixEsVectorRetriever|BaseRetriever",
      "targetHandle": "BaseRetriever|retriever|ConversationalRetrievalChain-8rtnD"
    }
  ],
  "nodes": [
    {
      "id": "MixEsVectorRetriever-JIgmC",
      "data": {
        "id": "MixEsVectorRetriever-JIgmC",
        "node": {
          "template": {
            "tags": {
              "l2": false,
              "info": "",
              "list": true,
              "name": "tags",
              "show": true,
              "type": "str",
              "l2_name": "tags",
              "advanced": true,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "_type": "MixEsVectorRetriever",
            "metadata": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "metadata",
              "show": true,
              "type": "code",
              "l2_name": "metadata",
              "advanced": true,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "combine_strategy": {
              "l2": false,
              "info": "",
              "list": true,
              "name": "combine_strategy",
              "show": true,
              "type": "str",
              "value": "mix",
              "l2_name": "combine_strategy",
              "options": [
                "keyword_front",
                "vector_front",
                "mix"
              ],
              "advanced": false,
              "password": false,
              "required": true,
              "multiline": false,
              "placeholder": ""
            },
            "vector_retriever": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "vector_retriever",
              "show": true,
              "type": "BaseRetriever",
              "l2_name": "vector_retriever",
              "advanced": false,
              "password": false,
              "required": true,
              "multiline": false,
              "placeholder": ""
            },
            "keyword_retriever": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "keyword_retriever",
              "show": true,
              "type": "BaseRetriever",
              "l2_name": "keyword_retriever",
              "advanced": false,
              "password": true,
              "required": true,
              "multiline": false,
              "placeholder": "",
              "value": ""
            }
          },
          "description": "This class ensemble the results of es retriever and vector retriever.",
          "base_classes": [
            "MixEsVectorRetriever",
            "BaseRetriever"
          ],
          "display_name": "MixEsVectorRetriever",
          "output_types": [],
          "custom_fields": {},
          "documentation": ""
        },
        "type": "MixEsVectorRetriever",
        "value": null
      },
      "type": "genericNode",
      "width": 384,
      "height": 351,
      "dragging": false,
      "position": {
        "x": 1456.5446683021978,
        "y": 975.5257642095944
      },
      "selected": false,
      "positionAbsolute": {
        "x": 1456.5446683021978,
        "y": 975.5257642095944
      }
    },
    {
      "id": "Milvus-9KIR6",
      "data": {
        "id": "Milvus-9KIR6",
        "node": {
          "template": {
            "_type": "Milvus",
            "drop_old": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "drop_old",
              "show": false,
              "type": "bool",
              "value": false,
              "l2_name": "drop_old",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "documents": {
              "l2": false,
              "info": "",
              "list": true,
              "name": "documents",
              "show": true,
              "type": "Document",
              "l2_name": "documents",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": "",
              "display_name": "Documents"
            },
            "embedding": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "embedding",
              "show": false,
              "type": "Embeddings",
              "l2_name": "embedding",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": "",
              "display_name": "Embedding"
            },
            "metadatas": {
              "l2": false,
              "info": "",
              "list": true,
              "name": "metadatas",
              "show": false,
              "type": "code",
              "l2_name": "metadatas",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "index_params": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "index_params",
              "show": false,
              "type": "code",
              "l2_name": "index_params",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "search_kwargs": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "search_kwargs",
              "show": true,
              "type": "code",
              "value": "{}",
              "l2_name": "search_kwargs",
              "advanced": true,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "search_params": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "search_params",
              "show": false,
              "type": "code",
              "l2_name": "search_params",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "collection_name": {
              "l2": true,
              "info": "",
              "list": false,
              "name": "collection_name",
              "show": true,
              "type": "str",
              "value": "col_1699251369_dcd9cedb",
              "l2_name": "collection_name",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "connection_args": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "connection_args",
              "show": true,
              "type": "code",
              "value": "",
              "l2_name": "connection_args",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "consistency_level": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "consistency_level",
              "show": false,
              "type": "str",
              "value": "Session",
              "l2_name": "consistency_level",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            }
          },
          "description": "Create a Milvus collection, indexes it with HNSW, and insert data.",
          "base_classes": [
            "Milvus",
            "VectorStore",
            "BaseRetriever",
            "VectorStoreRetriever"
          ],
          "display_name": "Milvus",
          "output_types": [],
          "custom_fields": {},
          "documentation": "http://192.168.106.116:8030"
        },
        "type": "Milvus",
        "value": null
      },
      "type": "genericNode",
      "width": 384,
      "height": 393,
      "position": {
        "x": 907.705832228571,
        "y": 952.1538184898642
      },
      "selected": false,
      "positionAbsolute": {
        "x": 907.705832228571,
        "y": 952.1538184898642
      }
    },
    {
      "id": "ElasticKeywordsSearch-pFFyR",
      "data": {
        "id": "ElasticKeywordsSearch-pFFyR",
        "node": {
          "template": {
            "ids": {
              "l2": false,
              "info": "",
              "list": true,
              "name": "ids",
              "show": false,
              "type": "str",
              "l2_name": "ids",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "llm": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "llm",
              "type": "BaseLLM",
              "l2_name": "llm",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": "",
              "display_name": "LLM"
            },
            "_type": "ElasticKeywordsSearch",
            "prompt": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "prompt",
              "type": "BasePromptTemplate",
              "l2_name": "prompt",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": "",
              "display_name": "prompt"
            },
            "documents": {
              "l2": false,
              "info": "",
              "list": true,
              "name": "documents",
              "show": true,
              "type": "Document",
              "l2_name": "documents",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": "",
              "display_name": "Documents"
            },
            "embedding": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "embedding",
              "show": false,
              "type": "Embeddings",
              "l2_name": "embedding",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": "",
              "display_name": "Embedding"
            },
            "metadatas": {
              "l2": false,
              "info": "",
              "list": true,
              "name": "metadatas",
              "show": false,
              "type": "code",
              "l2_name": "metadatas",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "index_name": {
              "l2": true,
              "info": "",
              "list": false,
              "name": "index_name",
              "show": true,
              "type": "str",
              "value": "col_1699251369_dcd9cedb",
              "l2_name": "index_name",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "ssl_verify": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "ssl_verify",
              "show": true,
              "type": "str",
              "value": "",
              "l2_name": "ssl_verify",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": "",
              "display_name": "ssl_verify"
            },
            "search_kwargs": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "search_kwargs",
              "show": true,
              "type": "code",
              "value": "{}",
              "l2_name": "search_kwargs",
              "advanced": true,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "refresh_indices": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "refresh_indices",
              "show": false,
              "type": "bool",
              "value": true,
              "l2_name": "refresh_indices",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "elasticsearch_url": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "elasticsearch_url",
              "show": true,
              "type": "str",
              "value": "",
              "l2_name": "elasticsearch_url",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": "",
              "display_name": "ES_connection_url"
            }
          },
          "description": "Construct ElasticKeywordsSearch wrapper from raw documents.",
          "base_classes": [
            "ElasticKeywordsSearch",
            "VectorStore",
            "BaseRetriever",
            "VectorStoreRetriever"
          ],
          "display_name": "ElasticKeywordsSearch",
          "output_types": [],
          "custom_fields": {},
          "documentation": "http://192.168.106.116:8030"
        },
        "type": "ElasticKeywordsSearch",
        "value": null
      },
      "type": "genericNode",
      "width": 384,
      "height": 475,
      "dragging": false,
      "position": {
        "x": 903.2107877030476,
        "y": 460.8465996330932
      },
      "selected": false,
      "positionAbsolute": {
        "x": 903.2107877030476,
        "y": 460.8465996330932
      }
    },
    {
      "id": "ChatOpenAI-AjHb7",
      "data": {
        "id": "ChatOpenAI-AjHb7",
        "node": {
          "template": {
            "n": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "n",
              "show": false,
              "type": "int",
              "value": 1,
              "l2_name": "n",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "tags": {
              "l2": false,
              "info": "",
              "list": true,
              "name": "tags",
              "show": false,
              "type": "str",
              "l2_name": "tags",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "_type": "ChatOpenAI",
            "cache": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "cache",
              "show": false,
              "type": "bool",
              "l2_name": "cache",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "client": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "client",
              "show": false,
              "type": "Any",
              "l2_name": "client",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "verbose": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "verbose",
              "show": false,
              "type": "bool",
              "value": false,
              "l2_name": "verbose",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "metadata": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "metadata",
              "show": false,
              "type": "code",
              "l2_name": "metadata",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "callbacks": {
              "l2": false,
              "info": "",
              "list": true,
              "name": "callbacks",
              "show": false,
              "type": "langchain.callbacks.base.BaseCallbackHandler",
              "l2_name": "callbacks",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "streaming": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "streaming",
              "show": false,
              "type": "bool",
              "value": false,
              "l2_name": "streaming",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "max_tokens": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "max_tokens",
              "show": true,
              "type": "int",
              "l2_name": "max_tokens",
              "advanced": true,
              "password": true,
              "required": false,
              "multiline": false,
              "placeholder": "",
              "value": ""
            },
            "model_name": {
              "l2": false,
              "info": "",
              "list": true,
              "name": "model_name",
              "show": true,
              "type": "str",
              "value": "gpt-3.5-turbo-16k-0613",
              "l2_name": "model_name",
              "options": [
                "gpt-3.5-turbo-0613",
                "gpt-3.5-turbo",
                "gpt-3.5-turbo-16k-0613",
                "gpt-3.5-turbo-16k",
                "gpt-4-0613",
                "gpt-4-32k-0613",
                "gpt-4",
                "gpt-4-32k"
              ],
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "max_retries": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "max_retries",
              "show": false,
              "type": "int",
              "value": 6,
              "l2_name": "max_retries",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "temperature": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "temperature",
              "show": true,
              "type": "float",
              "value": 0.7,
              "l2_name": "temperature",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "model_kwargs": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "model_kwargs",
              "show": true,
              "type": "code",
              "l2_name": "model_kwargs",
              "advanced": true,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "openai_proxy": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "openai_proxy",
              "show": true,
              "type": "str",
              "value": "http://118.195.232.223:39995",
              "l2_name": "openai_proxy",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": "",
              "display_name": "OpenAI Proxy"
            },
            "openai_api_key": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "openai_api_key",
              "show": true,
              "type": "str",
              "value": "",
              "l2_name": "openai_api_key",
              "advanced": false,
              "password": true,
              "required": false,
              "multiline": false,
              "placeholder": "",
              "display_name": "OpenAI API Key"
            },
            "openai_api_base": {
              "l2": false,
              "info": "\nThe base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.\n",
              "list": false,
              "name": "openai_api_base",
              "show": true,
              "type": "str",
              "l2_name": "openai_api_base",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": "",
              "display_name": "OpenAI API Base"
            },
            "request_timeout": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "request_timeout",
              "show": false,
              "type": "float",
              "l2_name": "request_timeout",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "openai_organization": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "openai_organization",
              "show": false,
              "type": "str",
              "l2_name": "openai_organization",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": "",
              "display_name": "OpenAI Organization"
            },
            "tiktoken_model_name": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "tiktoken_model_name",
              "show": false,
              "type": "str",
              "l2_name": "tiktoken_model_name",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            }
          },
          "description": "Wrapper around OpenAI Chat large language models.",
          "base_classes": [
            "ChatOpenAI",
            "BaseChatModel",
            "BaseLanguageModel",
            "BaseLLM"
          ],
          "display_name": "ChatOpenAI",
          "output_types": [],
          "custom_fields": {},
          "documentation": "https://python.langchain.com/docs/modules/model_io/models/chat/integrations/openai"
        },
        "type": "ChatOpenAI",
        "value": null
      },
      "type": "genericNode",
      "width": 384,
      "height": 587,
      "position": {
        "x": 1020.9048559847092,
        "y": -180.39350545000784
      },
      "selected": false,
      "positionAbsolute": {
        "x": 1020.9048559847092,
        "y": -180.39350545000784
      }
    },
    {
      "id": "ConversationBufferMemory-Fzq3Z",
      "data": {
        "id": "ConversationBufferMemory-Fzq3Z",
        "node": {
          "template": {
            "_type": "ConversationBufferMemory",
            "ai_prefix": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "ai_prefix",
              "show": false,
              "type": "str",
              "value": "AI",
              "l2_name": "ai_prefix",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "input_key": {
              "l2": false,
              "info": "The variable to be used as Chat Input when more than one variable is available.",
              "list": false,
              "name": "input_key",
              "show": true,
              "type": "str",
              "value": "",
              "l2_name": "input_key",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "memory_key": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "memory_key",
              "show": true,
              "type": "str",
              "value": "chat_history",
              "l2_name": "memory_key",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "output_key": {
              "l2": false,
              "info": "The variable to be used as Chat Output (e.g. answer in a ConversationalRetrievalChain)",
              "list": false,
              "name": "output_key",
              "show": true,
              "type": "str",
              "value": "answer",
              "l2_name": "output_key",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "chat_memory": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "chat_memory",
              "show": true,
              "type": "BaseChatMessageHistory",
              "l2_name": "chat_memory",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "human_prefix": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "human_prefix",
              "show": false,
              "type": "str",
              "value": "Human",
              "l2_name": "human_prefix",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "return_messages": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "return_messages",
              "show": true,
              "type": "bool",
              "l2_name": "return_messages",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            }
          },
          "description": "Buffer for storing conversation memory.",
          "base_classes": [
            "BaseMemory",
            "BaseChatMemory",
            "ConversationBufferMemory"
          ],
          "display_name": "ConversationBufferMemory",
          "output_types": [],
          "custom_fields": {},
          "documentation": "https://python.langchain.com/docs/modules/memory/how_to/buffer"
        },
        "type": "ConversationBufferMemory",
        "value": null
      },
      "type": "genericNode",
      "width": 384,
      "height": 527,
      "dragging": false,
      "position": {
        "x": 1555.4674506744238,
        "y": -258.7298925750187
      },
      "selected": false,
      "positionAbsolute": {
        "x": 1555.4674506744238,
        "y": -258.7298925750187
      }
    },
    {
      "id": "ConversationalRetrievalChain-8rtnD",
      "data": {
        "id": "ConversationalRetrievalChain-8rtnD",
        "node": {
          "template": {
            "llm": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "llm",
              "show": true,
              "type": "BaseLanguageModel",
              "l2_name": "llm",
              "advanced": false,
              "password": false,
              "required": true,
              "multiline": false,
              "placeholder": ""
            },
            "_type": "ConversationalRetrievalChain",
            "memory": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "memory",
              "show": true,
              "type": "BaseChatMemory",
              "l2_name": "memory",
              "advanced": false,
              "password": false,
              "required": true,
              "multiline": false,
              "placeholder": ""
            },
            "verbose": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "verbose",
              "show": false,
              "type": "bool",
              "value": false,
              "l2_name": "verbose",
              "advanced": true,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "callbacks": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "callbacks",
              "show": false,
              "type": "Callbacks",
              "l2_name": "callbacks",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "retriever": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "retriever",
              "show": true,
              "type": "BaseRetriever",
              "l2_name": "retriever",
              "advanced": false,
              "password": false,
              "required": true,
              "multiline": false,
              "placeholder": ""
            },
            "chain_type": {
              "l2": false,
              "info": "",
              "list": true,
              "name": "chain_type",
              "show": true,
              "type": "str",
              "value": "stuff",
              "l2_name": "chain_type",
              "options": [
                "stuff",
                "map_reduce",
                "map_rerank",
                "refine"
              ],
              "advanced": false,
              "password": false,
              "required": true,
              "multiline": false,
              "placeholder": ""
            },
            "input_node": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "input_node",
              "show": true,
              "type": "input",
              "l2_name": "input_node",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": "",
              "display_name": "Preset Question"
            },
            "condense_question_llm": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "condense_question_llm",
              "show": false,
              "type": "BaseLanguageModel",
              "l2_name": "condense_question_llm",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "return_source_documents": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "return_source_documents",
              "show": true,
              "type": "bool",
              "value": true,
              "l2_name": "return_source_documents",
              "advanced": true,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": "",
              "display_name": "Return source documents"
            },
            "condense_question_prompt": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "condense_question_prompt",
              "show": true,
              "type": "BasePromptTemplate",
              "value": {
                "_type": "prompt",
                "template": "Given the following conversation and a follow up question, rephrase the follow up question to be a standalone question, in its original language.\n\nChat History:\n{chat_history}\nFollow Up Input: {question}\nStandalone question:",
                "output_parser": null,
                "input_variables": [
                  "chat_history",
                  "question"
                ],
                "template_format": "f-string",
                "partial_variables": {},
                "validate_template": true
              },
              "l2_name": "condense_question_prompt",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "combine_docs_chain_kwargs": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "combine_docs_chain_kwargs",
              "show": true,
              "type": "BasePromptTemplate",
              "l2_name": "combine_docs_chain_kwargs",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": "",
              "display_name": "prompt"
            }
          },
          "description": "Convenience method to load chain from LLM and retriever.",
          "base_classes": [
            "BaseConversationalRetrievalChain",
            "Chain",
            "ConversationalRetrievalChain",
            "function"
          ],
          "display_name": "ConversationalRetrievalChain",
          "output_types": [],
          "custom_fields": {},
          "documentation": "https://python.langchain.com/docs/modules/chains/popular/chat_vector_db"
        },
        "type": "ConversationalRetrievalChain",
        "value": null
      },
      "type": "genericNode",
      "width": 384,
      "height": 495,
      "dragging": false,
      "position": {
        "x": 2239.0623987760696,
        "y": 153.07429302838258
      },
      "selected": false,
      "positionAbsolute": {
        "x": 2239.0623987760696,
        "y": 153.07429302838258
      }
    },
    {
      "id": "PromptTemplate-kmKoP",
      "data": {
        "id": "PromptTemplate-kmKoP",
        "node": {
          "name": "",
          "template": {
            "_type": "PromptTemplate",
            "template": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "template",
              "show": true,
              "type": "prompt",
              "value": "参考文本：\n{context}\n\n----------------------\n\n1.你是一名专业的行业报告分析师，要求你用中文回答用户问题，并且答案要严谨专业。\n2.你需要依据以下【参考文本】中的内容来回答，当【参考文本】中有明确与用户问题相关的内容时才进行回答，不可根据自己的知识来回答。\n3.若【参考文本】中的内容只是与用户问题相关但无法据此回复用户问题，则应当先向用户了解更多信息。比如：用户问“中国人口是多少？”，【参考文本】中分别提到了2022年12月底、2023年3月两个时间点的中国人口数据，无法据此回复用户问题，则应当回复用户“我查到了2022年12月底、2023年3月两个时间点的中国人口数据，您需要了解哪个时间的数据？”\n4.由于【参考文本】可能包含多个来自不同信息源的信息，所以根据这些不同的信息源可能得出有差异甚至冲突的答案，当发现这种情况时，这些答案都列举出来；如果没有冲突或差异，则只需要给出一个最终结果。\n5.若【参考文本】中内容与用户问题不相关则回复“没有找到相关内容”。\n\n----------------------\n\n用户问题: {question}\n你的回答:",
              "l2_name": "template",
              "advanced": false,
              "password": false,
              "required": true,
              "multiline": true,
              "placeholder": ""
            },
            "output_parser": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "output_parser",
              "show": true,
              "type": "BaseOutputParser",
              "l2_name": "output_parser",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "input_variables": {
              "l2": false,
              "info": "",
              "list": true,
              "name": "input_variables",
              "show": false,
              "type": "str",
              "value": [
                "context",
                "question"
              ],
              "l2_name": "input_variables",
              "advanced": false,
              "password": false,
              "required": true,
              "multiline": false,
              "placeholder": ""
            },
            "template_format": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "template_format",
              "show": false,
              "type": "str",
              "value": "f-string",
              "l2_name": "template_format",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "partial_variables": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "partial_variables",
              "show": false,
              "type": "code",
              "l2_name": "partial_variables",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            },
            "validate_template": {
              "l2": false,
              "info": "",
              "list": false,
              "name": "validate_template",
              "show": false,
              "type": "bool",
              "value": true,
              "l2_name": "validate_template",
              "advanced": false,
              "password": false,
              "required": false,
              "multiline": false,
              "placeholder": ""
            }
          },
          "description": "Schema to represent a prompt for an LLM.",
          "base_classes": [
            "StringPromptTemplate",
            "PromptTemplate",
            "BasePromptTemplate"
          ],
          "display_name": "PromptTemplate",
          "output_types": [],
          "custom_fields": {
            "": [
              "context",
              "question"
            ]
          },
          "documentation": "https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/",
          "field_formatters": {
            "formatters": {
              "openai_api_key": {}
            },
            "base_formatters": {
              "dict": {},
              "list": {},
              "show": {},
              "union": {},
              "kwargs": {},
              "default": {},
              "headers": {},
              "optional": {},
              "password": {},
              "multiline": {},
              "model_fields": {
                "MODEL_DICT": {
                  "OpenAI": [
                    "text-davinci-003",
                    "text-davinci-002",
                    "text-curie-001",
                    "text-babbage-001",
                    "text-ada-001"
                  ],
                  "Anthropic": [
                    "claude-v1",
                    "claude-v1-100k",
                    "claude-instant-v1",
                    "claude-instant-v1-100k",
                    "claude-v1.3",
                    "claude-v1.3-100k",
                    "claude-v1.2",
                    "claude-v1.0",
                    "claude-instant-v1.1",
                    "claude-instant-v1.1-100k",
                    "claude-instant-v1.0"
                  ],
                  "ChatOpenAI": [
                    "gpt-3.5-turbo-0613",
                    "gpt-3.5-turbo",
                    "gpt-3.5-turbo-16k-0613",
                    "gpt-3.5-turbo-16k",
                    "gpt-4-0613",
                    "gpt-4-32k-0613",
                    "gpt-4",
                    "gpt-4-32k"
                  ],
                  "ChatAnthropic": [
                    "claude-v1",
                    "claude-v1-100k",
                    "claude-instant-v1",
                    "claude-instant-v1-100k",
                    "claude-v1.3",
                    "claude-v1.3-100k",
                    "claude-v1.2",
                    "claude-v1.0",
                    "claude-instant-v1.1",
                    "claude-instant-v1.1-100k",
                    "claude-instant-v1.0"
                  ]
                }
              },
              "dict_code_file": {}
            }
          }
        },
        "type": "PromptTemplate",
        "value": null
      },
      "type": "genericNode",
      "width": 384,
      "height": 291,
      "dragging": false,
      "position": {
        "x": 1503.9919274739982,
        "y": 437.2191810947292
      },
      "selected": false,
      "positionAbsolute": {
        "x": 1503.9919274739982,
        "y": 437.2191810947292
      }
    }
  ],
  "viewport": {
    "x": -440.89872787534,
    "y": 96.6215809860004,
    "zoom": 0.78265580804948
  }
}